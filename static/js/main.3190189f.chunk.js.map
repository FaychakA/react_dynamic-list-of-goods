{"version":3,"sources":["GoodsList/GoodsList.tsx","api/api.tsx","App.tsx","index.tsx"],"names":["GoodsList","props","goodsList","map","good","className","color","key","id","name","getGoods","a","fetch","then","response","json","goods","App","state","listOfGoods","filesIsLoaded","handleShowAllGoods","setState","handleShowFiveFirstGoods","sort","b","localeCompare","slice","handleShowAllRedGoods","filter","type","onClick","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAYaA,G,MAAY,SAACC,GAAkB,IAClCC,EAAcD,EAAdC,UAER,OACE,4BACGA,EAAUC,KAAI,SAACC,GAAD,OACb,wBACEC,UAAS,UAAKD,EAAKE,MAAV,QACTC,IAAKH,EAAKI,IAETJ,EAAKK,Y,uBCfDC,EAND,uCAAG,4BAAAC,EAAA,sEACKC,MAAM,cAAcC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UADnD,cACTC,EADS,yBAGRA,GAHQ,2CAAH,qDC0ECC,E,4MAhEbC,MAAe,CACbC,YAAa,GACbC,eAAe,G,EAGjBC,mBAAqB,WACnB,EAAKC,SAAS,CACZF,eAAe,IAEjBV,IACGG,MAAK,SAAAG,GACJ,EAAKM,SAAS,CACZH,YAAaH,EACbI,eAAe,Q,EAKvBG,yBAA2B,WACzB,EAAKD,SAAS,CACZF,eAAe,IAEjBV,IACGG,MAAK,SAAAG,GACJ,EAAKM,SAAS,CACZH,YAAaH,EAAMQ,MAAK,SAACb,EAASc,GAAV,OAAuBd,EAAEF,KAAKiB,cAAcD,EAAEhB,SAAQkB,MAAM,EAAG,GACvFP,eAAe,Q,EAKvBQ,sBAAwB,WACtB,EAAKN,SAAS,CACZF,eAAe,IAEjBV,IACGG,MAAK,SAAAG,GACJ,EAAKM,SAAS,CACZH,YAAaH,EAAMa,QAAO,SAACzB,GAAD,MAAgC,QAAfA,EAAKE,SAChDc,eAAe,Q,uDAOrB,OACE,oCACE,qDAEA,4BAAQU,KAAK,SAASC,QAASC,KAAKX,oBAApC,kBAEA,4BAAQS,KAAK,SAASC,QAASC,KAAKT,0BAApC,yBAEA,4BAAQO,KAAK,SAASC,QAASC,KAAKJ,uBAApC,kBAEEI,KAAKd,MAAME,cACT,sBACA,kBAAC,EAAD,CAAWlB,UAAW8B,KAAKd,MAAMC,mB,GA3D3Bc,aCNlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3190189f.chunk.js","sourcesContent":["import React from 'react';\n\nexport interface Good {\n  id: number;\n  name: string;\n  color: string;\n}\n\ninterface Props {\n  goodsList: Array<Good>;\n}\n\nexport const GoodsList = (props: Props) => {\n  const { goodsList } = props;\n\n  return (\n    <ul>\n      {goodsList.map((good: Good) => (\n        <li\n          className={`${good.color}Good`}\n          key={good.id}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","\nconst getGoods = async () => {\n  const goods = await fetch('goods.json').then(response => response.json());\n\n  return goods;\n};\n\nexport default getGoods;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { GoodsList, Good } from './GoodsList/GoodsList';\nimport getGoods from './api/api';\n\ninterface State {\n  listOfGoods: Array<Good>;\n  filesIsLoaded: boolean;\n}\n\nclass App extends Component {\n  state: State = {\n    listOfGoods: [],\n    filesIsLoaded: false,\n  };\n\n  handleShowAllGoods = () => {\n    this.setState({\n      filesIsLoaded: true,\n    });\n    getGoods()\n      .then(goods => {\n        this.setState({\n          listOfGoods: goods,\n          filesIsLoaded: false,\n        });\n      });\n  };\n\n  handleShowFiveFirstGoods = () => {\n    this.setState({\n      filesIsLoaded: true,\n    });\n    getGoods()\n      .then(goods => {\n        this.setState({\n          listOfGoods: goods.sort((a: Good, b: Good) => (a.name.localeCompare(b.name))).slice(0, 5),\n          filesIsLoaded: false,\n        });\n      });\n  };\n\n  handleShowAllRedGoods = () => {\n    this.setState({\n      filesIsLoaded: true,\n    });\n    getGoods()\n      .then(goods => {\n        this.setState({\n          listOfGoods: goods.filter((good: Good) => (good.color === 'red')),\n          filesIsLoaded: false,\n        });\n      });\n  };\n\n\n  render() {\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n\n        <button type=\"button\" onClick={this.handleShowAllGoods}>Load All goods</button>\n\n        <button type=\"button\" onClick={this.handleShowFiveFirstGoods}>Load five first goods</button>\n\n        <button type=\"button\" onClick={this.handleShowAllRedGoods}>Load red goods</button>\n\n        {(this.state.filesIsLoaded)\n          ? 'Loading from server'\n          : <GoodsList goodsList={this.state.listOfGoods} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}